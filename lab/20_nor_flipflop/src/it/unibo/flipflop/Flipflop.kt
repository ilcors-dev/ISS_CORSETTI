/* Generated by AN DISI Unibo */ 
package it.unibo.flipflop

import it.unibo.kactor.*
import alice.tuprolog.*
import unibo.basicomm23.*
import unibo.basicomm23.interfaces.*
import unibo.basicomm23.utils.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
import it.unibo.kactor.sysUtil.createActor   //Sept2023

//User imports JAN2024

class Flipflop ( name: String, scope: CoroutineScope, isconfined: Boolean=false  ) : ActorBasicFsm( name, scope, confined=isconfined ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		//val interruptedStateTransitions = mutableListOf<Transition>()
		 
				var Q = 0;
				var NotQ = 1;
				var SET = 0;
				var RESET = 1;
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						CommUtils.outblack("$name STARTS")
						CommUtils.outblack("$name Q: $Q")
						CommUtils.outblack("$name Q': $NotQ")
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t00",targetState="handleState",cond=whenRequest("state"))
				}	 
				state("handleState") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("state(A,B)"), Term.createTerm("state(A,B)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 SET = payloadArg(0).toInt()  
								 RESET = payloadArg(1).toInt()  
								CommUtils.outblack("RECEIVED SET=$SET RESET=$RESET ($SET $RESET)")
								request("norSET", "norSET($Q,$SET)" ,"nor" )  
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t01",targetState="handleNorSet",cond=whenReply("norSETReply"))
				}	 
				state("handleNorSet") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("norSETReply(O)"), Term.createTerm("norSETReply(O)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 NotQ = payloadArg(0).toInt()  
								CommUtils.outblack("$name Q': $NotQ")
								request("norRESET", "norRESET($RESET,$NotQ)" ,"nor" )  
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t02",targetState="handleNorReset",cond=whenReply("norRESETReply"))
				}	 
				state("handleNorReset") { //this:State
					action { //it:State
						if( checkMsgContent( Term.createTerm("norRESETReply(O)"), Term.createTerm("norRESETReply(O)"), 
						                        currentMsg.msgContent()) ) { //set msgArgList
								 Q = payloadArg(0).toInt()  
								CommUtils.outblack("$name Q: $Q")
						}
						//genTimer( actor, state )
					}
					//After Lenzi Aug2002
					sysaction { //it:State
					}	 	 
					 transition(edgeName="t03",targetState="handleState",cond=whenRequest("state"))
				}	 
			}
		}
} 
